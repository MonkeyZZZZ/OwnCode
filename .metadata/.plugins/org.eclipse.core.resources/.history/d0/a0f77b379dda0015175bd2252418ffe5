package com.example.a23httpurl;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.net.HttpURLConnection;
import java.net.URI;
import java.net.URL;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.app.Activity;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends Activity implements OnClickListener{

	
	public static final int SHOW_RESPONSE = 0;
	
	Button send;
	TextView response;
	
	private Handler handler=new Handler(){
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case SHOW_RESPONSE:
				String res=(String)msg.obj;
				response.setText(res);
				break;

			default:
				break;
			}
		};
	};
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        send=(Button) findViewById(R.id.button1);
        response=(TextView) findViewById(R.id.response);
        send.setOnClickListener(this);
    }

	@Override
	public void onClick(View arg0) {
		// TODO Auto-generated method stub
		if (arg0.getId()==R.id.button1) {
			sendRequestWithHttpClient();
		}
	}

	private void sendRequestWithHttpURLConnection() {
		// TODO Auto-generated method stub
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				// TODO Auto-generated method stub
			HttpURLConnection connection = null;
			try {
				URL url=new URL("http://www.baidu.com");
				connection=(HttpURLConnection) url.openConnection();
				connection.setRequestMethod("GET");
				connection.setConnectTimeout(8000);
				connection.setReadTimeout(8000);
				
				InputStream in=connection.getInputStream();
				BufferedReader reader=new BufferedReader(new InputStreamReader(in));
				StringBuilder res=new StringBuilder();
				String line;
				while ((line=reader.readLine())!=null) {
				res.append(line);
					
				}
				Message message=new Message();
				message.what=SHOW_RESPONSE;
				message.obj=res.toString();
				handler.sendMessage(message);
			} catch (Exception e) {
				// TODO: handle exception
			}finally{
				if (connection!=null) {
					connection.disconnect();
				}
			}
			
			}
		}).start();
	}
    private void sendRequestWithHttpClient(){
    	new Thread(new Runnable() {
			
			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					HttpClient httpClient=new DefaultHttpClient();
					HttpGet httpGet=new HttpGet("http://www.baidu.com");
					HttpResponse httpResponse=httpClient.execute(httpGet);
					if (httpResponse.getStatusLine().getStatusCode()==200) {
						HttpEntity httpEntity=httpResponse.getEntity();
						String response=EntityUtils.toString(httpEntity,"utf-8");
						parseXMLWithPull(response);
//						Message message=new Message();
//						message.what=SHOW_RESPONSE;
//						
//						message.obj=response.toString();
//						handler.sendMessage(message);
					}
				} catch (Exception e) {
					// TODO: handle exception
					e.printStackTrace();
				}
			}
		}).start();
    }

	protected void parseXMLWithPull(String response2) {
		// TODO Auto-generated method stub
		try {
			XmlPullParserFactory xmlPullParserFactory=XmlPullParserFactory.newInstance();
			XmlPullParser xmlPullParser=xmlPullParserFactory.newPullParser();
			xmlPullParser.setInput(new StringReader(response2));
			int eventType=xmlPullParser.getEventType();
			String id="";
			String name="";
			String version="";
			while (eventType!=xmlPullParser.END_DOCUMENT) {
				String nodeName=xmlPullParser.getName();
				switch (eventType) {
				case XmlPullParser.START_TAG:
					if ("id".equals(nodeName)) {
						id=xmlPullParser.nextText();
					}else if ("name".equals(nodeName)) {
						name=xmlPullParser.nextText();
					}else if ("version".equals(nodeName)) {
						version=xmlPullParser.nextText();
					}
					break;
				case XmlPullParser.END_TAG:
					if ("app".equals(nodeName)) {
						Log.d("MainActivity", "id is " + id);
						Log.d("MainActivity", "name is " + name);
						Log.d("MainActivity", "version is " + version);
					}
				default:
					break;
				}
				eventType=xmlPullParser.next();
			}
			
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
}
